# Make sure you have an export preset for web and you must
# have put `<script src="coi-serviceworker.js"></script>`
# in the "Head Include" property of the preset the
# "coi-serviceworker.js" script allow setting COOP and COEP
# headers in Github Pages, without, the game will not load

# 1. Ensure you have the action saved in the .github/workflows folder of your repo, unless you have Github pro it'll need to be public
# 2. Create the export web setting and ensure that your export_presents.cfg is pushed too.
# 3. The action should build your project and push it to the gh-pages branch.
# 4. Going into Settings > Pages > Deploy from a branch and select gh-pages, this should create a new job to deploy and should work then.

# I had an issue with imports in my project that required me to run the Godot build twice, which is line 71.

name: "godot4-web-deployer"
on:
  push:
    branches:
      - main

permissions:
  contents: write

env:
  GODOT_MAJOR_MINOR_VERSION: "4.2" # must be a string, not a number
  GODOT_PATCH_VERSION: stable

  GODOT_EXECUTABLE_DOWNLOAD_URL: "https://downloads.tuxfamily.org/godotengine/4.2/Godot_v4.2-stable_linux.x86_64.zip"
  GODOT_TEMPLATES_DOWNLOAD_URL: "https://downloads.tuxfamily.org/godotengine/4.2/Godot_v4.2-stable_export_templates.tpz"

  PROJECT_FOLDER: "." # the path to the godot project (must contain `project.godot` file) relative to the github root path

  EXPORT_TEMPLATE: release # export with release || debug
  EXPORT_PRESET_NAME: Web # name of the preset
  EXPORT_FOLDER: build/ # just the folder where the project will be build, not really important
  EXPORT_FILENAME: index.html # export file name

  DEPLOYMENT_BRANCH: gh-pages # the name of the branch, will be automatically created if it does not exist

jobs:
  export_web:
    runs-on: ubuntu-latest
    name: Export Web Game
    steps:
      - name: "Set environmental variables"
        run: |
          echo "GODOT_VERSION=${GODOT_MAJOR_MINOR_VERSION}.${GODOT_PATCH_VERSION}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Godot
        run: |
          # Download godot executable and templates
          curl ${GODOT_EXECUTABLE_DOWNLOAD_URL} --output godot.zip
          curl ${GODOT_TEMPLATES_DOWNLOAD_URL} --output templates.tpz
          unzip godot.zip -d godot
          unzip templates.tpz
          # Create needed dirs
          # Templates with godot 4 must be in ~/.local/share/godot/export_templates/${MAJOR.MINOR.PATCH}
          mkdir -v -p ~/.local/share/godot/export_templates/${GODOT_VERSION}

          mv templates/* ~/.local/share/godot/export_templates/${GODOT_VERSION}
          mv godot/Godot* ${GITHUB_WORKSPACE}/godot.x86_64
          # Just cleaning
          rm -R templates/
          rm templates.tpz

      - name: Build Project
        run: |
          mkdir -v -p ${GITHUB_WORKSPACE}/${EXPORT_FOLDER}
          cd ${PROJECT_FOLDER}
          # Exporting the game
          ${GITHUB_WORKSPACE}/godot.x86_64 --headless --path . --export-${EXPORT_TEMPLATE} ${EXPORT_PRESET_NAME} ${GITHUB_WORKSPACE}/${EXPORT_FOLDER}/${EXPORT_FILENAME}
      - name: Add coi-service-worker
        run: |
          git clone https://github.com/gzuidhof/coi-serviceworker.git
          mv coi-serviceworker/coi-serviceworker.js ${EXPORT_FOLDER}/coi-serviceworker.js

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.EXPORT_PRESET_NAME }}
          path: ${{ env.EXPORT_FOLDER }}

      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: ${{ env.DEPLOYMENT_BRANCH }}
          folder: ${{ env.EXPORT_FOLDER }}